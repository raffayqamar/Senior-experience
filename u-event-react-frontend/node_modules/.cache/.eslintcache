[{"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/index.js":"1","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/App.js":"2","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/MainUI.jsx":"3","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/login/Login.jsx":"4","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/login/RegisterOverlay2.jsx":"5","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventDetails.jsx":"6","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/Account/Account.jsx":"7","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/CreateEvent.jsx":"8","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/Sidebar.jsx":"9","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/image/ImageUpload.jsx":"10","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/image/ImageDisplay.jsx":"11","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/commonElements.jsx":"12","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventBoard.jsx":"13","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventCard.jsx":"14","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/SidebarAccountStatus.jsx":"15","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/SidebarLinkComponent.jsx":"16","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/notification/Notification.jsx":"17","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/ManageEvents.jsx":"18","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventCardForm.jsx":"19"},{"size":254,"mtime":1698867772295,"results":"20","hashOfConfig":"21"},{"size":1719,"mtime":1698869999123,"results":"22","hashOfConfig":"21"},{"size":404,"mtime":1698867772292,"results":"23","hashOfConfig":"21"},{"size":7456,"mtime":1698867772286,"results":"24","hashOfConfig":"21"},{"size":6307,"mtime":1698867772291,"results":"25","hashOfConfig":"21"},{"size":4740,"mtime":1698875603492,"results":"26","hashOfConfig":"21"},{"size":18396,"mtime":1698869998935,"results":"27","hashOfConfig":"21"},{"size":12661,"mtime":1698867772291,"results":"28","hashOfConfig":"21"},{"size":2008,"mtime":1698867772292,"results":"29","hashOfConfig":"21"},{"size":1067,"mtime":1698867772286,"results":"30","hashOfConfig":"21"},{"size":1170,"mtime":1698867772285,"results":"31","hashOfConfig":"21"},{"size":1908,"mtime":1698869999123,"results":"32","hashOfConfig":"21"},{"size":3867,"mtime":1698869998936,"results":"33","hashOfConfig":"21"},{"size":2658,"mtime":1698875603491,"results":"34","hashOfConfig":"21"},{"size":1611,"mtime":1698867772292,"results":"35","hashOfConfig":"21"},{"size":620,"mtime":1698867772292,"results":"36","hashOfConfig":"21"},{"size":515,"mtime":1698867772292,"results":"37","hashOfConfig":"21"},{"size":3086,"mtime":1698893629812,"results":"38","hashOfConfig":"21"},{"size":5366,"mtime":1698875603492,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1s8phlu",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/index.js",[],[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/App.js",["108","109","110"],[],"import React from \"react\";\nimport MainUI from \"./components/mainui/MainUI\";\nimport Sidebar from \"./components/mainui/sidebar/Sidebar\";\n\nimport Account from \"./components/Account/Account\";\nimport EventDetails from \"./components/mainui/EventDetails\";\nimport CreateEvent from \"./components/mainui/CreateEvent\";\nimport Login from \"./components/login/Login\";\nimport \"./css/Login.css\";\nimport \"./css/Account.css\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport RegistrationOverlay2 from \"./components/login/RegisterOverlay2\";\n\n//Upload Images\nimport ImageUpload from \"./components/image/ImageUpload\";\nimport ImageDisplay from \"./components/image/ImageDisplay\";\nimport ManageEvents from \"./components/mainui/ManageEvents\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        {/* <ImageUpload />\n        <ImageDisplay /> */}\n        <div className=\"divide-wall\"></div>\n        <div className=\"App\">\n          <Routes>\n            <Route path=\"/login\" element={<Login />} />\n          </Routes>\n          <Sidebar />\n          <Routes>\n            <Route path=\"/\" element={<MainUI />} />\n            <Route path=\"/account\" element={<Account />} />\n            <Route path=\"/login/register\" element={<Login />} />\n            <Route path=\"/event-details\" element={<EventDetails />} />\n            <Route path=\"/create-events\" element={<CreateEvent />} />\n            <Route path=\"/manage-events\" element={<ManageEvents />} />\n          </Routes>\n        </div>\n      </Router>\n      <p className=\"component-heading\">\n        <p className=\"component-text-1\">U-</p>{\" \"}\n        <p className=\"component-text-2\">Event</p>\n      </p>\n    </>\n  );\n}\n\nexport default App;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/MainUI.jsx",["111"],[],"import React from \"react\";\nimport EventBoard from \"./EventBoard\";\nimport \"../../css/MainUI.css\";\nimport rectImageOne from \"../../assets/right-rect-1.svg\";\n\nconst MainUI = () => {\n  return (\n    <section className=\"main-ui\">\n      {/* <img src={rectImageOne} className=\"bg-rec-image\" alt=\"rectimage\" /> */}{\" \"}\n      {/* rect image */}\n      <EventBoard />\n    </section>\n  );\n};\n\nexport default MainUI;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/login/Login.jsx",["112","113","114"],[],"import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import RegistrationOverlay1 from \"./RegisterOverlay1\";\nimport RegistrationOverlay2 from \"./RegisterOverlay2\";\nimport \"../../css/Login.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faApple,\n  faFacebook,\n  faGoogle,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport loginimage from \"../../assets/ugur-arpaci-U18V0ToioFU-unsplash.jpg\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const linkRef = useRef();\n\n  const [createForm, setCreateForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n  });\n\n  // UPDATE FORM CONTENT FOR GET REQUEST\n  const handleChange = (e) => {\n    setCreateForm({\n      ...createForm,\n      [e.target.name]: e.target.value,\n    });\n    console.log(createForm);\n  };\n\n  // handle Login\n\n  // \"http://localhost:8080/api/users/login\"\n\n  // const handleLogin = (e) => {\n  //   e.preventDefault();\n\n  //   const { username, password } = this.state;\n  //   //send login data to backend using fetchAPI\n  //   fetch(\"http://localhost:8080/api/users/login\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({ username, password }),\n  //   })\n  //     .then((response) => {\n  //       if (response.ok) {\n  //         // The request was successful, you can handle the response here\n  //         console.log(\"Event created successfully\");\n  //         // Reset the form or navigate to a different page\n  //       } else {\n  //         // The request failed, handle the error here\n  //         console.error(\"Failed to create event\");\n  //         // Display an error message or handle the error as needed\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error:\", error);\n  //       // Handle any network errors here\n  //     });\n  // };\n\n  const handlesubmit = async (e) => {\n    e.preventDefault();\n\n    // Create a FormData object\n    const formData = new FormData();\n\n    // Create an object of the form fields\n    const { ...formDataFields } = createForm;\n\n    for (const key in formDataFields) {\n      formData.append(key, formDataFields[key]);\n    }\n\n    console.log(\"formData: \", formData);\n    console.log(createForm);\n\n    // Make a POST request to your backend endpoint\n    fetch(\"http://localhost:8080/api/users/login\", {\n      method: \"POST\",\n      body: JSON.stringify(createForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          // The request was successful, you can handle the response here\n          console.log(\"Logged In successfully\");\n          // Reset the form or navigate to a different page\n          linkRef.current.click();\n          // Show the JWT token in the console\n          console.log(\"JWT: \", response.headers.get(\"Authorization\"));\n        } else {\n          // The request failed, handle the error here\n          console.error(\"Failed to log user in\");\n          // Display an error message or handle the error as needed\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        // Handle any network errors here\n      });\n  };\n\n  // Create state to track whether overlay[Modal] is open or not\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  // Arrow function to open the overlay\n  const openOverlay = () => {\n    console.log(\"openOverlay\");\n    setIsOverlayOpen(true);\n  };\n  // Arrow function to close the overlay\n  const closeOverlay = () => {\n    console.log(\"closeOverlay\");\n    setIsOverlayOpen(false);\n  };\n\n  return (\n    <div className=\"login-div\">\n      <div className=\"show-overlay-container\">\n        {/*\n            // Boolean expression to check if overlay is open or not\n        */}\n        {isOverlayOpen && (\n          <RegistrationOverlay2 onClose={closeOverlay} onSelectMethod />\n        )}\n      </div>\n\n      <div className=\"login-screen-container\">\n        <div className=\"login-email-container\">\n          <div className=\"form-container\">\n            <form\n              className=\"login-form\"\n              data-testid=\"login-form\"\n              onSubmit={handlesubmit}\n            >\n              <h2 className=\"brand-logo\">U-Event</h2>\n              <label htmlFor=\"email\"> E-mail </label>\n              <input\n                type=\"text\"\n                id=\"email\"\n                data-testid=\"email\"\n                name=\"username\"\n                required\n                onChange={(e) => {\n                  handleChange(e);\n                  localStorage.setItem(\"username\", e.target.value);\n                  // Reset firstName and lastName from localStorage\n                  localStorage.removeItem(\"firstName\");\n                  localStorage.removeItem(\"lastName\");\n                }}\n              />\n              <label htmlFor=\"password\"> Password </label>\n              <input\n                type=\"text\"\n                id=\"password\"\n                data-testid=\"password\"\n                name=\"password\"\n                required\n                onChange={handleChange}\n              />\n              <button className=\"login-button\" type=\"submit\">\n                {\" \"}\n                Login{\" \"}\n              </button>\n              <button className=\"link-button\" type=\"Forgot Password\">\n                {\" \"}\n                Forgot Password{\" \"}\n              </button>\n              <button\n                className=\"create-button\"\n                data-testid=\"create-account-button\"\n                type=\"Create Account\"\n                onClick={openOverlay}\n              >\n                Don't have an account! Create one here\n              </button>\n              {/* Auth Provider Buttons */}\n              <div className=\"divider\">\n                <p className=\"custom-or-text\">or</p>\n                <hr />\n              </div>\n              <div className=\"button-container\">\n                <a\n                  href=\"/\"\n                  className=\"google-btn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                  }}\n                >\n                  <FontAwesomeIcon className=\"btn-icon\" icon={faGoogle} />\n                </a>\n                <a\n                  href=\"/\"\n                  className=\"facebook-btn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                  }}\n                >\n                  <FontAwesomeIcon className=\"btn-icon\" icon={faFacebook} />\n                </a>\n                <a\n                  href=\"/\"\n                  className=\"google-btn\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                  }}\n                >\n                  <FontAwesomeIcon className=\"btn-icon\" icon={faApple} />\n                </a>\n              </div>\n              {/* Auth Provider Buttons */}\n            </form>\n            <Link to=\"/\" ref={linkRef} style={{ display: \"none\" }}></Link>\n            <div className=\"login-image-container\">\n              {/* IMAGE */}\n\n              {/* IMAGE */}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        {username}\n        {password}\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/login/RegisterOverlay2.jsx",["115","116","117","118","119","120","121"],[],"import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RegistrationOverlay2 = ({ onClose, onRegisterEmail }) => {\n  const [notification, setNotification] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n\n  // For the redirect link after account creation\n  const linkRef = useRef();\n\n  /************************************************* */\n\n  const [createForm, setCreateForm] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    username: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    role: \"USER\",\n    provider: \"LOCAL\",\n  });\n\n  const showNotification = () => {\n    if (formReadyToSubmit) {\n      setNotification(true);\n      setTimeout(() => {\n        setNotification(false);\n      }, 2000);\n    }\n  };\n\n  // UPDATE FORM CONTENT FOR POST REQUEST\n  const handleChange = (e) => {\n    setCreateForm({\n      ...createForm,\n      [e.target.name]: e.target.value,\n    });\n    console.log(createForm);\n  };\n\n  const [formReadyToSubmit, setFormReadyToSubmit] = useState(false);\n\n  // Create state to track whether overlay[Modal] is open or not\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  // Arrow function to open the overlay\n  const openOverlay = () => {\n    setIsOverlayOpen(true);\n  };\n  // Arrow function to close the overlay\n  const closeOverlay = () => {\n    setIsOverlayOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create a FormData object\n    const formData = new FormData();\n\n    // Create an object of the form fields\n    const { firstName, lastName, username, password } = createForm;\n\n    // Update the formData object\n    formData.append(\"firstName\", firstName);\n    formData.append(\"lastName\", lastName);\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n\n    console.log(formData);\n\n    // Make a POST request to your backend endpoint\n    fetch(\"http://localhost:8080/api/users\", {\n      method: \"POST\",\n      body: JSON.stringify(createForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          // The request was successful, you can handle the response here\n          console.log(\"User created successfully\");\n          alert(\"Account Created\");\n\n          // Navigate to the close the overlay\n          closeOverlay();\n        } else {\n          // The request failed, handle the error here\n          console.error(\"Failed to create user\");\n          alert(\"Account NOT Created 😭\");\n          // Display an error message or handle the error as needed\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        // Handle any network errors here\n      });\n  };\n\n  /************************************************* */\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   console.log(email);\n  // };\n\n  return (\n    <div className=\"overlay2\">\n      <div className=\"overlay2-content\">\n        <form\n          className=\"overlay2-form\"\n          onSubmit={(e) => {\n            handleSubmit(e);\n          }}\n        >\n          <div className=\"create-close-btn-container\">\n            <button\n              className=\"overlay-close-button\"\n              data-testid=\"close-overlay-button\"\n              onClick={onClose}\n            >\n              {/*\n                    // The following line is a unicode character for the multiplication sign\n                    */}\n              {\"\\u00D7\"}\n            </button>\n          </div>\n\n          <div className=\"create-close-btn-container\">\n            {/* <button className=\"overlay-back-button\"> back </button>\n            <button className=\"overlay-close-button\" onClick={onClose}>\n              {\" \"}\n              close{\" \"}\n            </button> */}\n          </div>\n          <h2 className=\"overlay-2-header\"> Create Account By Email </h2>\n          <div className=\"overlay-input-container\">\n            <label htmlFor=\"firstName\"> First Name </label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n              required\n              onChange={(e) => {\n                handleChange(e);\n                localStorage.setItem(\"firstName\", e.target.value);\n              }}\n            />\n            <label htmlFor=\"lastName\"> Last Name </label>\n            <input\n              type=\"text\"\n              id=\"lastName\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n              required\n              onChange={(e) => {\n                handleChange(e);\n                localStorage.setItem(\"lastName\", e.target.value);\n              }}\n            />\n            <label htmlFor=\"email\"> E-mail </label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"username\"\n              placeholder=\"E-mail\"\n              required\n              onChange={(e) => {\n                handleChange(e);\n                localStorage.setItem(\"username\", e.target.value);\n              }}\n            />\n            <label htmlFor=\"password\"> Password </label>\n            <input\n              type=\"text\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              required\n              onChange={handleChange}\n            />\n            <label htmlFor=\"passwordConfirm\"> Confirm Password </label>\n            <input\n              type=\"text\"\n              id=\"passwordConfirm\"\n              name=\"passwordConfirm\"\n              placeholder=\"Confirm Password\"\n              required\n              onChange={handleChange}\n            />\n            <button\n              className=\"overlay2-button\"\n              type=\"submit\"\n              onClick={(e) => {\n                handleSubmit(e);\n                alert(\"Account Created\");\n              }}\n            >\n              {\" \"}\n              Register{\" \"}\n            </button>\n          </div>\n        </form>\n        {/* Redirect Link After Account Creation */}\n        <Link to=\"/account\" ref={linkRef} style={{ display: \"none\" }}></Link>\n        {/* End of Redirect Link After Account Creation */}\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationOverlay2;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventDetails.jsx",["122","123"],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/Account/Account.jsx",["124","125","126","127","128","129"],[],"import React, { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\n\n// Import the fontawesome icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport loginimage from \"../../assets/ugur-arpaci-U18V0ToioFU-unsplash.jpg\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Account = () => {\n  // Initial profile picture URL\n  const [profilePicture, setProfilePicture] = useState(\n    \"https://via.placeholder.com/150\"\n  ); //placeholder image\n  // Handle the file input\n\n  const fileInputRef = useRef(null);\n\n  const openFileInput = () => {\n    fileInputRef.current.click();\n  };\n\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    // Clear user session or perform any other logout logic here\n    localStorage.clear(); // Example: Clearing local storage\n\n    // Redirect user to the login page or any other page\n    navigate(\"/login\"); // Update the path as per your routing setup\n  };\n\n  /** User Details Card */\n  // // to change each individual fiels when user makes a change on details card\n\n  // get username from local storage and use it to get user details from backend\n  const [imageBase64, setImageBase64] = useState(null);\n  const username = localStorage.getItem(\"username\");\n  const [imageId, setImageId] = useState([0]);\n\n  // fetch the images associated with the current username\n  const [userData, setUserData] = useState([]);\n\n  useEffect(() => {\n    // fetch data from the backend\n    fetch(`http://localhost:8080/images/image/${username}`)\n      .then((res) => res.json())\n      .then((userData) => {\n        // set the state of the user data\n        setUserData(userData);\n        console.log(\"userData: \", userData);\n        // show the image ID\n        setImageId(userData); // this is the image ID for the user profile picture\n      })\n      .catch((error) => {\n        console.error(\"Error fetching image:\", error);\n        setImageBase64(null); // set image to null if there is an error\n      });\n  }, []);\n\n  // DISPLAY THE IMAGE passing the first ID -----\n  setTimeout(() => {\n    fetch(`http://localhost:8080/images/${imageId[0]}`)\n      .then((res) => res.json())\n      .then((data) => {\n        // Extract the base64 image data from the JSON response\n        const base64String = data.image;\n        setImageBase64(base64String);\n\n        // console.log(\"Image Base64: \", base64String);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching image:\", error);\n        setImageBase64(null); // set image to null if there is an error\n      });\n  }, 100);\n\n  // DISPLAY THE IMAGE -----\n\n  useEffect(() => {\n    setTimeout(() => {\n      // fetch data from the backend\n      fetch(`http://localhost:8080/api/users/${username}`)\n        .then((res) => res.json())\n        .then((userData) => {\n          setUserData(userData);\n          localStorage.setItem(\"firstName\", userData.firstName);\n        });\n    }, 500);\n  }, []);\n\n  // -------\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      fetch(`http://localhost:8080/images/uploadImage/${username}`, {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => {\n          if (response.ok) {\n            // Image uploaded successfully, you can handle the success here\n            setProfilePicture(URL.createObjectURL(file));\n          } else {\n            // Handle the error here\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error uploading image:\", error);\n        });\n    }\n  };\n  // --------------------------------------------------\n\n  const {\n    firstName,\n    lastName,\n    jobDescription,\n    nickname,\n    phoneNumber,\n    address,\n    postalCode,\n    password,\n  } = userData;\n\n  const handleChangeField = (e) => {\n    const { name, value } = e.target;\n    // Assuming you are using React's useState hooks\n    // Update the state for the respective input field\n    setUserData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  //handle the submit button on the details card\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Create a FormData object\n    const formData = new FormData();\n\n    // Create an object of the form fields\n    const createForm = {\n      firstName: firstName,\n      lastName: lastName,\n      jobDescription: jobDescription,\n      nickname: nickname,\n      username: username,\n      phoneNumber: phoneNumber,\n      address: address,\n      postalCode: postalCode,\n      password: password,\n      confirmPassword: password,\n    };\n\n    // Update the formData object\n    formData.append(\"firstName\", firstName);\n    formData.append(\"lastName\", lastName);\n    formData.append(\"jobDescription\", jobDescription);\n    formData.append(\"nickname\", nickname);\n    formData.append(\"username\", username);\n    formData.append(\"phoneNumber\", phoneNumber);\n    formData.append(\"address\", address);\n    formData.append(\"postalCode\", postalCode);\n    formData.append(\"password\", password);\n\n    console.log(formData);\n\n    // Make a POST request to your backend endpoint\n    fetch(\n      `http://localhost:8080/api/users/${localStorage.getItem(\"username\")}`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify(createForm),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          // The request was successful, you can handle the response here\n          console.log(\"User Details updated successfully\");\n          alert(\"Account Created\");\n          // Reset the form or navigate to a different page\n        } else {\n          // The request failed, handle the error here\n          console.error(\"Failed to update user details\");\n          alert(\"User Details Not Updated 😭\");\n          // Display an error message or handle the error as needed\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        // Handle any network errors here\n      });\n    console.log(\"Updated user details:\" + userData);\n  };\n\n  // Handle the delete image button\n  const handleDeleteImage = () => {\n    fetch(`http://localhost:8080/images/deleteImage/${imageId}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          // Image deleted successfully - remove the image from the state\n          setImageBase64(null);\n        } else {\n          // Handle the error\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error removing image:\", error);\n      });\n  };\n\n  /** Interests Card */\n\n  const [selectedInterests, setSelectedInterests] = useState([]);\n  const interests = [\n    \"Archery\",\n    \"Dancing\",\n    \"Cooking\",\n    \"Sports\",\n    \"Hiking\",\n    \"Painting\",\n    \"Rock-Climbing\",\n  ]; // Example interests\n\n  const [editDetails, setEditDetails] = useState(false);\n\n  const toggleInterest = (interest) => {\n    if (selectedInterests.includes(interest)) {\n      setSelectedInterests(\n        selectedInterests.filter((item) => item !== interest)\n      );\n    } else {\n      setSelectedInterests([...selectedInterests, interest]);\n    }\n  };\n\n  /** Events Card */\n\n  const [events, setEvents] = useState([\n    { id: 1, name: \"Event 1\", date: \"2021-01-01\" },\n    { id: 2, name: \"Event 2\", date: \"2021-01-02\" },\n    { id: 3, name: \"Event 3\", date: \"2021-01-03\" },\n  ]);\n\n  return (\n    <div className=\"accounts-page\">\n      <div className=\"accounts-grid-block\">\n        <div className=\"grid-content\">\n          {/* User Profile Card Section */}\n\n          {/* USER CONTAINER */}\n          <div\n            className={`user-profile-container ${editDetails ? \"edit\" : \"\"}`}\n          >\n            <div className=\"user-profile-card\">\n              <div className=\"user-profile-card-body\">\n                <div className=\"user-profile-card-body-content\">\n                  <div className=\"user-profile-card-body-content-image\">\n                    {/* Close Icon */}\n                    <div className=\"image-profile-container\">\n                      {/* \n                      IMPORTANT CODE FOR DELETE ICON: If the image (imageBase64) is present then the delete icon will appear else it will not appear.\n                       */}\n                      {imageBase64 ? (\n                        <FontAwesomeIcon\n                          icon={faTimes}\n                          className=\"close-icon\"\n                          onClick={(e) => {\n                            handleDeleteImage(e);\n                            console.log(\"Image Deleted\");\n                            console.log(\"Image ID: \", imageId);\n                          }}\n                        />\n                      ) : (\n                        <FontAwesomeIcon\n                          style={{\n                            display: \"none\",\n                          }}\n                          icon={faTimes}\n                          className=\"close-icon\"\n                          onClick={(e) => {\n                            handleDeleteImage(e);\n                            console.log(\"Image Deleted\");\n                            console.log(\"Image ID: \", imageId);\n                          }}\n                        />\n                      )}\n                      {/* \n                      IMPORTANT CODE FOR IMAGE FIELD: If the image is present in DB then the image will appear else a placeholder image will appear in the size of 150x150.\n                       */}\n                      {imageBase64 ? (\n                        <img\n                          className=\"user-profile-image\"\n                          src={`data:image/jpeg;base64,${imageBase64}`}\n                          width={100}\n                          height={100}\n                          alt=\"image_alt\"\n                        />\n                      ) : (\n                        <img\n                          className=\"user-profile-image\"\n                          src=\"https://via.placeholder.com/150\"\n                          width={100}\n                          height={100}\n                          alt=\"image_alt\"\n                        />\n                      )}\n                    </div>\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleFileChange}\n                      style={{ display: \"none\" }}\n                      ref={fileInputRef}\n                    />\n                  </div>\n                  <div className=\"user-profile-card-body-content-text\">\n                    {console.log(\"userData: \", userData)}\n                    <div className=\"meta-data\">\n                      <h3>{`${firstName ? firstName : \"\"} ${\n                        lastName ? lastName : \"\"\n                      }`}</h3>\n                      <p>{jobDescription}</p>\n                      <p>{nickname}</p>\n                      <p>{username}</p>\n                    </div>\n                  </div>\n                  <input type=\"file\" onChange={handleFileChange} />\n                  <button onClick={handleUpload}>Upload Image</button>\n                </div>\n              </div>\n            </div>\n\n            {/* User Details Card Section */}\n\n            <div\n              className={`user-details-card\n            ${editDetails ? \"edit\" : \"\"}`}\n            >\n              <div className=\"user-details-card-body\">\n                <div className=\"user-details-card-header\">\n                  <h2>Details</h2>\n                </div>\n                <div className=\"user-details-card-body-content\">\n                  <button\n                    className=\"edit-user-details-button\"\n                    onClick={\n                      editDetails\n                        ? () => setEditDetails(false)\n                        : () => setEditDetails(true)\n                    }\n                  >\n                    Edit User Details\n                  </button>\n                  <form\n                    onSubmit={handleSubmit}\n                    className=\"accounts-form-container\"\n                  >\n                    <div className=\"user-details-card-body-content-text\">\n                      <div>\n                        <label htmlFor=\"firstName\">First Name</label>\n                        {/* Updated First and Last name fields to update localstorage */}\n                        <input\n                          type=\"text\"\n                          id=\"firstName\"\n                          name=\"firstName\"\n                          value={firstName}\n                          onChange={(e) => {\n                            handleChangeField(e);\n                            localStorage.setItem(\"firstName\", e.target.value);\n                          }}\n                        />\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input\n                          type=\"text\"\n                          id=\"lastName\"\n                          name=\"lastName\"\n                          value={lastName}\n                          onChange={(e) => {\n                            handleChangeField(e);\n                            localStorage.setItem(\"lastName\", e.target.value);\n                          }}\n                        />\n                        <label htmlFor=\"jobDescription\">Job Description</label>\n                        <input\n                          type=\"text\"\n                          id=\"jobDescription\"\n                          name=\"jobDescription\"\n                          value={jobDescription}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"nickname\">Nickname</label>\n                        <input\n                          type=\"text\"\n                          id=\"nickname\"\n                          name=\"nickname\"\n                          value={nickname}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                          type=\"email\"\n                          id=\"email\"\n                          name=\"username\"\n                          value={username}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input\n                          type=\"tel\"\n                          id=\"phone\"\n                          name=\"phoneNumber\"\n                          value={phoneNumber}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"address\">Address</label>\n                        <input\n                          type=\"text\"\n                          id=\"address\"\n                          name=\"address\"\n                          value={address}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"postalCode\">Postal Code</label>\n                        <input\n                          type=\"text\"\n                          id=\"postalCode\"\n                          name=\"postalCode\"\n                          value={postalCode}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                          type=\"password\"\n                          id=\"password\"\n                          name=\"password\"\n                          value={password}\n                          onChange={handleChangeField}\n                        />\n                        <label htmlFor=\"confirmPassword\">\n                          Confirm Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          id=\"confirmPassword\"\n                          name=\"confirmPassword\"\n                          value={password}\n                          onChange={handleChangeField}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"user-details-card-body-content-button\">\n                      <button\n                        className=\"submit-updated-user-details\"\n                        type=\"submit-updated-user-details\"\n                        onClick={(e) => {\n                          handleSubmit(e);\n                          alert(\"Updated User Details\");\n                        }}\n                      >\n                        {\" \"}\n                        Update{\" \"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* USER CONTAINER */}\n\n          {/* <UserInterestsCard/> */}\n\n          <div className=\"user-profile-lower-container\">\n            <div className=\"interests-card\">\n              <h2>Interests</h2>\n              <div className=\"interests-selection-box\">\n                {interests.map((interest) => (\n                  <div className=\"interest-wrapper\" key={interest}>\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedInterests.includes(interest)}\n                      onChange={() => toggleInterest(interest)}\n                    />\n                    <span>{interest}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* <UserEventsCard/> */}\n\n            <div className=\"events-card\">\n              <h2>Events</h2>\n              <div className=\"events-signup-listing\">\n                {events.map((event) => (\n                  <p key={event.id}>\n                    {event.name} - {event.date}\n                  </p>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"logout-button-container\">\n        <button onClick={handleLogout} className=\"logout-button\">\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/CreateEvent.jsx",["130","131","132"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../css/CreateEvent.css\";\nimport \"../../css/EventCard.css\";\nimport EventCard from \"../../components/mainui/EventCard\";\nimport rectImageOne from \"../../assets/right-rect-1.svg\";\n\n// Notification component\nimport Notification from \"../notification/Notification\";\n\nconst CreateEvent = () => {\n  // Set the status of 200 or 400 for the notification\n  const [responseStatus, setResponse] = useState(\"\");\n  const [showNotification, setShowNotification] = useState(false);\n\n  const linkRef = useRef();\n\n  useEffect(() => {\n    if (showNotification) {\n      const notificationTimeout = setTimeout(() => {\n        setShowNotification(false);\n      }, 1000); // 1 second\n\n      return () => {\n        clearTimeout(notificationTimeout);\n      };\n    }\n  }, [showNotification]);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // fetch data from the backend\n    fetch(\"http://localhost:8080/api/events\")\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, []);\n\n  // GET FROM API ONCE AUTHENTICATION IS SET UP\n  const user = {\n    username: `${localStorage.getItem(\"username\")}`,\n    firstName: \"\",\n    lastName: \"\",\n  };\n\n  const [notification, setNotification] = useState(false);\n  const [notificationText, setNotificationText] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const [uploadedImageURL, setUploadedImageURL] = useState(\"\");\n\n  const [createForm, setCreateForm] = useState({\n    eventName: \"\",\n    username: `${localStorage.getItem(\"username\")}`,\n    eventDate: \"\",\n    eventTime: \"\",\n    location: \"\",\n    postalCode: \"\",\n    countryCode: \"\",\n    city: \"\",\n    description: \"\",\n    category: \"\",\n    image: \"\",\n    imageFile: null,\n    tags: [],\n  });\n\n  // append tags to the tags array\n  const appendTags = (tag) => {\n    setCreateForm({\n      ...createForm,\n      tags: [...createForm.tags, tag],\n    });\n  };\n\n  const showAlert = () => {\n    if (formReadyToSubmit) {\n      setNotification(true);\n      setTimeout(() => {\n        setNotification(false);\n      }, 2000);\n    }\n  };\n\n  const handleChange = (e) => {\n    setCreateForm({\n      ...createForm,\n      [e.target.name]: e.target.value,\n    });\n    console.log(createForm);\n    // if for is empty, disable the submit button\n    if (e.target.value === \"\") {\n      setFormReadyToSubmit(false);\n    } else {\n      setFormReadyToSubmit(true);\n    }\n  };\n\n  const [formReadyToSubmit, setFormReadyToSubmit] = useState(false);\n\n  // Handling File Upload\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    setCreateForm({\n      ...createForm,\n      imageFile: file,\n    });\n\n    // Create a URL for the selected image file - Will create a temporary URL for the image as a blob, which can be used to preview the image.\n    const imageURL = URL.createObjectURL(file);\n    setUploadedImageURL(imageURL);\n  };\n\n  const handleUploadImage = () => {\n    fileInputRef.current.click();\n  };\n\n  const [resText, setResText] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Create a FormData object\n    const formData = new FormData();\n\n    // Create an object of the form fields\n    const { imageFile, ...formDataFields } = createForm;\n\n    for (const key in formDataFields) {\n      formData.append(key, formDataFields[key]);\n    }\n\n    // Append the imageFile separately\n    formData.append(\"imageFile\", createForm.imageFile);\n    console.log(\"formData: \", formData);\n    console.log(createForm);\n\n    // Make a POST request to your backend endpoint\n    fetch(\"http://localhost:8080/api/events\", {\n      method: \"POST\",\n      body: JSON.stringify(createForm),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          // The request was successful, you can handle the response here\n          console.log(\"Event created successfully\");\n          setResponse(\"Event created successfully\");\n          // Show the notification\n          setShowNotification(true);\n          linkRef.current.click(); // Redirect to home page\n          // Reset the form or navigate to a different page\n        } else {\n          // The request failed, handle the error here\n          console.error(\"Failed to create event\");\n          setResponse(\"Failed to create event\");\n          // Show the notification\n          setShowNotification(true);\n          // Display an error message or handle the error as needed\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        // Handle any network errors here\n      });\n  };\n  return (\n    <section className=\"create-event-component\">\n      {/* Display the notification for 1 second then hide */}\n      {showNotification && (\n        <Notification\n          resText={responseStatus}\n          setShowNotification={setShowNotification}\n        />\n      )}\n      <Link to=\"/\" ref={linkRef} style={{ display: \"none\" }}></Link>\n\n      <img src={rectImageOne} className=\"bg-rec-image\" alt=\"rect_image\" />\n\n      <h1 className=\"create-event-header\">Create Event</h1>\n\n      <div className=\"create-event-container\">\n        {/* Create event form */}\n        <form className=\"create-event-form\" onSubmit={handleSubmit}>\n          {/* Background image for card */}\n          <div className=\"form-block image-option-block\">\n            <label htmlFor=\"event-image\">Image</label>\n            <input\n              type=\"text\"\n              name=\"image\"\n              id=\"event-image\"\n              placeholder=\"Image URL\"\n              onChange={handleChange}\n            />\n            {/* Upload image file */}\n            <div className=\"upload-image-container\">\n              <input\n                type=\"file\"\n                name=\"imageFile\"\n                id=\"event-image-file\"\n                accept=\"image/*\"\n                onChange={handleFileChange}\n                ref={fileInputRef}\n                style={{ display: \"none\" }}\n              />\n              <label\n                htmlFor=\"event-image-file\"\n                className=\"file-upload-label\"\n                style={{\n                  cursor: \"pointer\",\n                  border: \"1px solid black\",\n                  padding: \"0.2rem 1rem\",\n                  marginTop: \"0.5rem\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                Upload\n              </label>\n              <button\n                style={{ display: \"none\", cursor: \"pointer\" }}\n                className=\"upload-image-btn\"\n                onClick={handleUploadImage}\n                type=\"button\"\n              >\n                Upload\n              </button>\n            </div>\n          </div>\n          <div className=\"form-block\">\n            <label htmlFor=\"event-name\">Event</label>\n            <input\n              type=\"text\"\n              name=\"eventName\"\n              id=\"event-name\"\n              placeholder=\"Event Name\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-block\">\n            <label htmlFor=\"event-date\">Date</label>\n            {/* DAY calendar input */}\n            <input\n              type=\"date\"\n              name=\"eventDate\"\n              id=\"event-date\"\n              onChange={handleChange}\n            />\n\n            {/* YEAR */}\n          </div>\n          <div className=\"form-block\">\n            <label htmlFor=\"event-name\">Time</label>\n            <select name=\"eventTime\" id=\"event-time\" onChange={handleChange}>\n              {/* provide time format to match this 04:05:06 using 24hour format for morning and later times*/}\n              <option value=\"10:00:00\">10:00 AM</option>\n              <option value=\"10:30:00\">10:30 AM</option>\n              <option value=\"11:00:00\">11:00 AM</option>\n              <option value=\"11:30:00\">11:30 AM</option>\n              <option value=\"12:00:00\">12:00 PM</option>\n              <option value=\"12:30:00\">12:30 PM</option>\n              <option value=\"13:00:00\">1:00 PM</option>\n              <option value=\"13:30:00\">1:30 PM</option>\n              <option value=\"14:00:00\">2:00 PM</option>\n              <option value=\"14:30:00\">2:30 PM</option>\n              <option value=\"15:00:00\">3:00 PM</option>\n              <option value=\"15:30:00\">3:30 PM</option>\n              <option value=\"16:00:00\">4:00 PM</option>\n              <option value=\"16:30:00\">4:30 PM</option>\n              <option value=\"17:00:00\">5:00 PM</option>\n              <option value=\"17:30:00\">5:30 PM</option>\n              <option value=\"18:00:00\">6:00 PM</option>\n              <option value=\"18:30:00\">6:30 PM</option>\n              <option value=\"19:00:00\">7:00 PM</option>\n              <option value=\"19:30:00\">7:30 PM</option>\n            </select>\n          </div>\n          <div className=\"address-block-container\">\n            <label htmlFor=\"event-location\">Address</label>\n            <div className=\"address-block\">\n              <input\n                type=\"text\"\n                name=\"location\"\n                id=\"event-location\"\n                placeholder=\"(e.g. 1234 Main St)\"\n                onChange={handleChange}\n              />\n              {/* City */}\n              <input\n                type=\"text\"\n                name=\"city\"\n                id=\"event-city\"\n                placeholder=\"(e.g. Denver)\"\n                onChange={handleChange}\n              />\n\n              {/* ZIP */}\n              <input\n                type=\"text\"\n                name=\"postalCode\"\n                id=\"event-postal-code\"\n                placeholder=\"(e.g. 80201)\"\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n          <div className=\"form-description-container\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              name=\"description\"\n              id=\"description\"\n              data-testid=\"description\"\n              placeholder=\"Event Description\"\n              cols=\"30\"\n              rows=\"10\"\n              onChange={handleChange}\n            ></textarea>\n          </div>\n          {/* Category */}\n          <div className=\"form-block\">\n            <label htmlFor=\"event-duration\">Category</label>\n            <select name=\"category\" id=\"event-category\" onChange={handleChange}>\n              <option value=\"concert\">Concert</option>\n              <option value=\"sports\">Sports</option>\n              <option value=\"food\">Food</option>\n              <option value=\"outdoors\">Outdoors</option>\n              <option value=\"games\">Games</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          {/* Category */}\n          {/* TAGS */}\n          <div className=\"form-block\">\n            <label htmlFor=\"event-tags\">Tags</label>\n            <input\n              type=\"text\"\n              name=\"tags\"\n              id=\"event-tags\"\n              placeholder=\"Add Tags\"\n              onKeyDown={(e) => {\n                // restrict the tags to only 4 tags\n                if (createForm.tags.length < 4) {\n                  // Click tab to add tags\n                  if (e.key === \"Tab\") {\n                    appendTags(e.target.value);\n                    e.target.value = \"\";\n                  }\n                  console.log(\"tags: \", createForm.tags);\n                } else if (createForm.tags.length === 4) {\n                  setNotificationText(\"Only 4 tags allowed\");\n                  showAlert();\n                }\n              }}\n            />\n          </div>\n          {/* TAGS */}\n          {/* Create Event Button */}\n          <div className=\"form-block\">\n            <button\n              className=\"submit-btn\"\n              data-testid=\"submit-btn\"\n              type=\"submit\"\n            >\n              Create Event\n            </button>\n            <p\n              data-testid=\"notification\"\n              className={`notification-tag-text\n            ${notification ? \"show\" : \"\"}`}\n            >\n              {notificationText}\n            </p>\n          </div>\n          <p className=\"caution-text\">\n            ⚠️ NOTE: Once this event is created a PDF will be accessible for a\n            participants\n          </p>\n        </form>\n        {/* Set Custom Fields for Create Event Card */}\n        <EventCard\n          {...createForm}\n          user={user}\n          backgroundImage={uploadedImageURL}\n          width={600}\n          height={600}\n          fontSize={40}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default CreateEvent;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/Sidebar.jsx",["133"],[],"import React, { useState } from \"react\";\nimport \"..//../../css/Sidebar.css\";\nimport { Link } from \"react-router-dom\";\nimport SidebarAccountStatus from \"./SidebarAccountStatus\";\n// Custom Icones Moved to CommonElements.jsx\nimport { linkContent } from \"../../commonElements\";\n// Custom Icones Moved to CommonElements.jsx\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBurger } from \"@fortawesome/free-solid-svg-icons\";\n\nimport LinkComponent from \"./SidebarLinkComponent\";\n\nconst Sidebar = () => {\n  const [hideSidebar, setHideSidebar] = useState(false);\n  const handleEventClick = () => {\n    // Set Hide Sidebar To Opposite Of Current State\n    setHideSidebar(!hideSidebar);\n  };\n  return (\n    <div className={`sidebar-wrapper ${hideSidebar ? \"show\" : \"hide\"}`}\n    data-testid=\"sidebar-wrapper\">\n      <div className=\"sidebar-component-fill\"></div>\n\n      <div className={`sidebar ${hideSidebar ? \"show\" : \"\"}`}>\n        <FontAwesomeIcon\n          icon={faBurger}\n          className={`burger-toggle`}\n          data-testid=\"burger-toggle\"\n          onClick={(e) => {\n            handleEventClick(e);\n          }}\n        />\n        <h1 className={`sidebar-logo`}> UE</h1>\n        <div className=\"hosted-section\">\n          {/* Link Components Clearner Code */}\n          <LinkComponent {...linkContent[0]} />\n          {/* Link Components Clearner Code */}\n        </div>\n        <div className=\"nav-section\">\n          {\n            // IMPORTANT CODE: To iteate through the link components starting at the second index. To Edit the nav links, edit the linkContent array in commonElements.jsx\n            linkContent.map((navlinkContent, index) => {\n              if (index > 0) {\n                return <LinkComponent {...navlinkContent} key={index} />;\n              }\n            })\n          }\n        </div>\n        <Link to=\"/account\" className=\"pill settings\">\n          <SidebarAccountStatus />\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/image/ImageUpload.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/image/ImageDisplay.jsx",["134","135"],[],"import React, { useEffect, useState } from \"react\";\n\nfunction ImageDisplay() {\n  const [imageBase64, setImageBase64] = useState(null);\n\n  const username = localStorage.getItem(\"username\");\n\n  useEffect(() => {\n    fetch(`http://localhost:8080/users/${username}`)\n      .then((response) => {\n        if (response.ok) {\n          return response.json(); // Parse the JSON response\n        } else {\n          throw new Error(\"Failed to fetch image\");\n        }\n      })\n      .then((data) => {\n        // Extract the base64 image data from the JSON response\n        const base64String = data.image;\n        console.log(data);\n\n        setImageBase64(base64String);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching image:\", error);\n      });\n  }, []);\n\n  return (\n    <div\n      style={{\n        zIndex: \"9999\",\n        position: \"absolute\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      {imageBase64 && (\n        <img\n          src={`data:image/jpeg;base64,${imageBase64}`}\n          width={100}\n          height={100}\n          alt=\"Image\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ImageDisplay;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/commonElements.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventBoard.jsx",["136","137","138","139"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EventCard from \"./EventCard\";\nimport \"../../css/EventBoard.css\";\nimport \"../../css/EventCard.css\";\nimport rectImageOne from \"../../assets/right-rect-1.svg\";\nimport feedIcon from \"../../assets/feed-icon.svg\";\n\nconst EventBoard = () => {\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [backBtn, setBackBtn] = useState(false);\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  // TODO-Complete: Fetch events from the backend\n  useEffect(() => {\n    // fetch data from the backend\n    fetch(\"http://localhost:8080/api/events\")\n      .then((res) => res.json())\n      .then((data) => {\n        setData(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    setFilteredData(filterData(filter));\n  }, [filter, data]);\n\n  const handleEventClick = (event) => {\n    setSelectedEvent(event);\n  };\n\n  const backBtnClicked = () => {\n    setBackBtn(!backBtn);\n  };\n\n  const handleFilterChange = (e) => {\n    const filter = e.target.value;\n    setFilter(filter);\n  };\n\n  const filterData = (filter) => {\n    const filteredData = data.filter((event) => {\n      return event.category === filter;\n    });\n    return filteredData;\n  };\n\n  return (\n    <section className=\"event-board\">\n      <p className=\"welcome-text\">{`Welcome back ${\n        // data[0] ? data[0].user.firstName : \"User\"\n        localStorage.getItem(\"firstName\")\n          ? localStorage.getItem(\"firstName\")\n          : \"User\"\n      }!`}</p>\n      <img src={rectImageOne} className=\"bg-rec-image\" alt=\"rectimage\" />\n      <img src={feedIcon} className=\"feed-icon\" alt=\"feedicon\" />\n      <div className=\"event-board-top\">\n        <div className=\"event-board-header\">\n          <h1 className=\"event-board-title\">Event Board</h1>\n          <Link to=\"/event-map\" className=\"event-board-map\">\n            View Map\n          </Link>\n          <div className=\"event-board-filter\">\n            {/* Filter Feature */}\n            <p>Filter By</p>\n            <select\n              className=\"event-board-filter\"\n              onChange={handleFilterChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"concert\">Concert</option>\n              <option value=\"sports\">Sports</option>\n              <option value=\"food\">Food</option>\n              <option value=\"outdoors\">Outdoors</option>\n              <option value=\"games\">Games</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"event-board-top\">\n        <div className=\"event-board-events\">\n          {filter === \"all\"\n            ? data.map((event) => {\n                {\n                  console.log(\"data: \", event);\n                }\n                return (\n                  <Link\n                    to=\"/event-details\"\n                    state={{ event }}\n                    key={event.eventId}\n                    className=\"event-board-event\"\n                  >\n                    <div className=\"zoom-effect\">\n                      <EventCard {...event} height={600} />\n                    </div>\n                  </Link>\n                );\n              })\n            : filteredData.map((event) => {\n                return (\n                  <div\n                    className=\"event-board-event\"\n                    key={event.eventId}\n                    onClick={() => handleEventClick(event)}\n                  >\n                    <div className=\"zoom-effect\">\n                      <EventCard {...event} height={600} />\n                    </div>\n                  </div>\n                );\n              })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default EventBoard;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventCard.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/SidebarAccountStatus.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/sidebar/SidebarLinkComponent.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/notification/Notification.jsx",["140"],[],"import React, { useState, useEffect } from \"react\";\nimport \"..//../css/Notification.css\";\n\nconst Notification = ({ resText, setShowNotification }) => {\n  useEffect(() => {\n    const notificationTimeout = setTimeout(() => {\n      setShowNotification(false);\n    }, 1000); // 1 second\n\n    return () => {\n      clearTimeout(notificationTimeout);\n    };\n  }, [resText, setShowNotification]);\n\n  return (\n    <div className={`notification`}>\n      <p>{`${resText}`}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/ManageEvents.jsx",[],[],"/Users/muhammadqamar/Documents/Senior Exp/senior-experience-group-project-u-journal/u-event-react-frontend/src/components/mainui/EventCardForm.jsx",[],[],{"ruleId":"141","severity":1,"message":"142","line":14,"column":8,"nodeType":"143","messageId":"144","endLine":14,"endColumn":28},{"ruleId":"141","severity":1,"message":"145","line":17,"column":8,"nodeType":"143","messageId":"144","endLine":17,"endColumn":19},{"ruleId":"141","severity":1,"message":"146","line":18,"column":8,"nodeType":"143","messageId":"144","endLine":18,"endColumn":20},{"ruleId":"141","severity":1,"message":"147","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":20},{"ruleId":"141","severity":1,"message":"148","line":12,"column":8,"nodeType":"143","messageId":"144","endLine":12,"endColumn":18},{"ruleId":"141","severity":1,"message":"149","line":15,"column":20,"nodeType":"143","messageId":"144","endLine":15,"endColumn":31},{"ruleId":"141","severity":1,"message":"150","line":16,"column":20,"nodeType":"143","messageId":"144","endLine":16,"endColumn":31},{"ruleId":"141","severity":1,"message":"151","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":22},{"ruleId":"141","severity":1,"message":"152","line":6,"column":10,"nodeType":"143","messageId":"144","endLine":6,"endColumn":26},{"ruleId":"141","severity":1,"message":"153","line":6,"column":28,"nodeType":"143","messageId":"144","endLine":6,"endColumn":47},{"ruleId":"141","severity":1,"message":"154","line":23,"column":9,"nodeType":"143","messageId":"144","endLine":23,"endColumn":25},{"ruleId":"141","severity":1,"message":"155","line":41,"column":29,"nodeType":"143","messageId":"144","endLine":41,"endColumn":49},{"ruleId":"141","severity":1,"message":"156","line":44,"column":10,"nodeType":"143","messageId":"144","endLine":44,"endColumn":23},{"ruleId":"141","severity":1,"message":"157","line":46,"column":9,"nodeType":"143","messageId":"144","endLine":46,"endColumn":20},{"ruleId":"141","severity":1,"message":"158","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"159","line":72,"column":5,"nodeType":"143","messageId":"144","endLine":72,"endColumn":12},{"ruleId":"141","severity":1,"message":"148","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":18},{"ruleId":"141","severity":1,"message":"160","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":24},{"ruleId":"141","severity":1,"message":"161","line":19,"column":9,"nodeType":"143","messageId":"144","endLine":19,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":59,"column":6,"nodeType":"164","endLine":59,"endColumn":8,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"163","line":90,"column":6,"nodeType":"164","endLine":90,"endColumn":8,"suggestions":"166"},{"ruleId":"141","severity":1,"message":"167","line":253,"column":18,"nodeType":"143","messageId":"144","endLine":253,"endColumn":27},{"ruleId":"141","severity":1,"message":"168","line":30,"column":10,"nodeType":"143","messageId":"144","endLine":30,"endColumn":14},{"ruleId":"141","severity":1,"message":"169","line":118,"column":10,"nodeType":"143","messageId":"144","endLine":118,"endColumn":17},{"ruleId":"141","severity":1,"message":"170","line":118,"column":19,"nodeType":"143","messageId":"144","endLine":118,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":42,"column":53,"nodeType":"173","messageId":"174","endLine":42,"endColumn":55},{"ruleId":"162","severity":1,"message":"163","line":27,"column":6,"nodeType":"164","endLine":27,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":39,"column":9,"nodeType":"178","endLine":44,"endColumn":11},{"ruleId":"141","severity":1,"message":"179","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":23},{"ruleId":"162","severity":1,"message":"180","line":28,"column":6,"nodeType":"164","endLine":28,"endColumn":20,"suggestions":"181"},{"ruleId":"141","severity":1,"message":"182","line":34,"column":9,"nodeType":"143","messageId":"144","endLine":34,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":89,"column":17,"nodeType":"185","messageId":"186","endLine":91,"endColumn":18},{"ruleId":"141","severity":1,"message":"187","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},"no-unused-vars","'RegistrationOverlay2' is defined but never used.","Identifier","unusedVar","'ImageUpload' is defined but never used.","'ImageDisplay' is defined but never used.","'rectImageOne' is defined but never used.","'loginimage' is defined but never used.","'setUsername' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'notification' is assigned a value but never used.","'notificationText' is assigned a value but never used.","'setNotificationText' is assigned a value but never used.","'showNotification' is assigned a value but never used.","'setFormReadyToSubmit' is assigned a value but never used.","'isOverlayOpen' is assigned a value but never used.","'openOverlay' is assigned a value but never used.","'Params' is defined but never used.","'eventId' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'openFileInput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["188"],["189"],"'setEvents' is assigned a value but never used.","'data' is assigned a value but never used.","'resText' is assigned a value but never used.","'setResText' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["190"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'selectedEvent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.",["191"],"'backBtnClicked' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.",{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"192","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [username]",{"range":"198","text":"199"},{"range":"200","text":"199"},{"range":"201","text":"199"},"Update the dependencies array to be: [filter, data, filterData]",{"range":"202","text":"203"},[2046,2048],"[username]",[2982,2984],[767,769],[907,921],"[filter, data, filterData]"]